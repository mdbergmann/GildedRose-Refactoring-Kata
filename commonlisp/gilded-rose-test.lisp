(fiasco:define-test-package :gilded-rose-test
  (:use :gilded-rose))
(in-package :gilded-rose-test)

(defmacro with-item-fixture (item-fun &body body)
  `(let* ((item ,item-fun)
          (gr (make-gilded-rose (list item))))
     ,@body))

(deftest aged-brie--decrease-sell-in--increase-quality ()
  (with-item-fixture (make-aged-brie 10 1)
    (update-quality gr)
    (is (= 9 (sell-in item)))
    (is (= 2 (quality item)))))

(deftest aged-brie--passed-sell-in--quality-increase-double ()
  (with-item-fixture (make-aged-brie 0 0)
    (update-quality gr)
    (is (= -1 (sell-in item)))
    (is (= 2 (quality item)))
    (update-quality gr)
    (is (= -2 (sell-in item)))
    (is (= 4 (quality item)))))

(deftest aged-brie--quality-max-50 ()
  (with-item-fixture (make-aged-brie 0 49)
    (update-quality gr)
    (is (= 50 (quality item)))
    (update-quality gr)
    (is (= 50 (quality item)))))

(deftest sulfuras--keeps-age-and-quality-1 ()
  (with-item-fixture (make-sulfuras 0 80)
    (update-quality gr)
    (is (= 0 (sell-in item)))
    (is (= 80 (quality item)))))

(deftest sulfuras--keeps-age-and-quality-2 ()
  (with-item-fixture (make-sulfuras -1 80)
    (update-quality gr)
    (is (= -1 (sell-in item)))
    (is (= 80 (quality item)))))

(deftest backstage--inc-quality--drop-to-0 ()
  (with-item-fixture (make-backstage 11 30)
    (update-quality gr)
    (is (= 10 (sell-in item)))
    (is (= 31 (quality item)))
    (update-quality gr)
    (is (= 9 (sell-in item)))
    (is (= 33 (quality item)))
    (update-quality gr)
    (update-quality gr)
    (update-quality gr)
    (update-quality gr)
    (is (= 5 (sell-in item)))
    (is (= 41 (quality item)))
    (update-quality gr)
    (is (= 4 (sell-in item)))
    (is (= 44 (quality item)))
    (update-quality gr)
    (update-quality gr)
    (update-quality gr)
    (update-quality gr)
    (update-quality gr)
    (is (= -1 (sell-in item)))
    (is (= 0 (quality item)))))

(defun ordinary-item-test (item gr)
  (update-quality gr)
  (is (= 1 (sell-in item)))
  (is (= 9 (quality item)))
  (update-quality gr)
  (is (= 0 (sell-in item)))
  (is (= 8 (quality item)))
  (update-quality gr)
  (is (= -1 (sell-in item)))
  (is (= 6 (quality item)))
  (update-quality gr)
  (update-quality gr)
  (update-quality gr)
  (update-quality gr)
  (is (= -5 (sell-in item)))
  (is (= 0 (quality item))))

(deftest ordinary-item--dext-vest ()
  (with-item-fixture (make-dext-vest 2 10)
    (ordinary-item-test item gr))
  (with-item-fixture (make-elixir 2 10)
    (ordinary-item-test item gr)))

(deftest conjured ()
  (with-item-fixture (make-conjured 2 10)
    (update-quality gr)
    (is (= 1 (sell-in item)))
    (is (= 8 (quality item)))
    (update-quality gr)
    (update-quality gr)
    (is (= -1 (sell-in item)))
    (is (= 2 (quality item)))
    (update-quality gr)
    (is (= -2 (sell-in item)))
    (is (= 0 (quality item)))))
